name: Build and Release to Production

on:
  push:
    branches:
      - main

jobs:
  cargo-build:
    runs-on: ubuntu-latest
    needs: build-web
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build tuono
        run: cargo build --release --all

      - name: Upload tuono artifact
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: target/release/api

  build-and-deploy-api:
    runs-on: ubuntu-latest
    needs: [cargo-build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to github registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download API binary
        uses: actions/download-artifact@v4
        with:
          name: api
          path: psgc-rs/api

      - name: Build and push Docker image
        run: docker buildx build --push -t ghcr.io/${{ github.repository }}/api:latest -f scripts/dockerfiles/api.Dockerfile .
